version: 2.1

orbs: 
  aws-s3: circleci/aws-s3@3.0.0

jobs:
  test:
    working_directory: ~/boilerplate-client-react
    docker:
      - image: 'circleci/node:14-browsers'
    steps:
      - checkout
      - run: sudo apt-get update
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Set up Dependencies
          command: |
            yarn install
      - run:
          name: Test Server
          command: |
            yarn start
          background: true
          environment:
            NODE_OPTIONS: --max_old_space_size=4096
      - run:
          name: Build and Lint
          command: |
            yarn build         
      - run:
          name: Test Frontend
          command: |
            export CI=true
            yarn test-ci
          environment:
            NODE_OPTIONS: --max_old_space_size=4096

  test-coverage:
    working_directory: ~/boilerplate-client-react
    docker:
      - image: 'circleci/node:14-browsers'
    steps:
      - checkout
      - run: sudo apt-get update
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Run Jest and Collect Coverage Reports
          command: |
            export CI=true
            yarn install
            yarn test-cov-ci
          environment:
            NODE_OPTIONS: --max_old_space_size=4096
      - store_artifacts:
          path: coverage

  deploy-wiki:
    working_directory: ~/boilerplate-client-react
    docker:
      - image: 'circleci/node:14'
    steps:
      - add_ssh_keys:
          fingerprints:
            - "57:05:87:cd:7b:4c:40:65:aa:bd:f4:97:c5:1a:c9:24"
      - checkout
      - run:
          name: Deploy wiki
          command: bash .circleci/deploy_wiki.sh
  deploy-staging:
    docker:
      - image: 'circleci/node:14'
    steps:
      - checkout
      - restore_cache:
          name: Restore yarn package cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Set up dependencies
          command: yarn install
      - run:
          name: Build the project
          command: yarn run predeploy:staging
      - aws-s3/sync:
          arguments: |
            --delete
          from: './build'
          aws-region: STAGING_AWS_DEFAULT_REGION
          aws-access-key-id: STAGING_AWS_ACCESS_KEY_ID
          aws-secret-access-key: STAGING_AWS_SECRET_ACCESS_KEY 
          to: 's3://$STAGING_S3_BUCKET_NAME'
  deploy-production:
    docker:
      - image: 'circleci/node:14'
    steps:
      - checkout
      - restore_cache:
          name: Restore yarn package cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Set up dependencies
          command: yarn install
      - run:
          name: Build the project
          command: yarn run predeploy:production
      - aws-s3/sync:
          arguments: |
            --delete
          from: './build'
          aws-region: PRODUCTION_AWS_DEFAULT_REGION
          aws-access-key-id: PRODUCTION_AWS_ACCESS_KEY_ID
          aws-secret-access-key: PRODUCTION_AWS_SECRET_ACCESS_KEY 
          to: 's3://$PRODUCTION_S3_BUCKET_NAME'

workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - development
                - master
      - test-coverage:
          filters:
            branches:
              ignore:
                - development
                - master
  deploy-staging:
    jobs:
      - test:
          filters:
            branches:
              only:
                - development
                - master
      - deploy-staging:
          requires:
            - test
          filters:
            branches:
              only:
                - development
      - deploy-production:
          requires:
            - test
          filters:
            branches:
              only:
                - master
  deploy_wiki:
    jobs:
      - deploy-wiki:
          filters:
            branches:
              only:
                - development
